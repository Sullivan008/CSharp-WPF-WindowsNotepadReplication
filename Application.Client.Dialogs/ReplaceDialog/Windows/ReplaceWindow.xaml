<Window x:Class="Application.Client.Dialogs.ReplaceDialog.Windows.ReplaceWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" 
        Height="200" Width="370"
        ResizeMode="NoResize" Title="Replace"
        Topmost="{Binding Source={x:Static Application.Current}, Path=MainWindow.IsActive, Mode=OneWay}">

    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding LoadDialogSettingsFromCache}"/>
        </behaviors:EventTrigger>
        <behaviors:EventTrigger EventName="Closing">
            <behaviors:InvokeCommandAction Command="{Binding UpdateDialogSettingsInCache}"/>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>

    <Window.Resources>
        <Style x:Key="ToolTipErrorMessageStyle" TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="#ADADAD" />
            <Setter Property="Background" Value="#E4E4E4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter Width="{TemplateBinding Width}"
                                                  Height="{TemplateBinding Height}"
                                                  TextBlock.Foreground="{TemplateBinding Foreground}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  TextBlock.TextAlignment="Center"
                                                  Margin="-1, 5, 0, 0"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Control.BorderBrush" Value="#0076D7" />
                    <Setter Property="Control.Background" Value="#E5F1FB"/>
                </Trigger>
                <Trigger Property="IsMouseCaptured" Value="True">
                    <Setter Property="Control.BorderBrush" Value="#005CA8" />
                    <Setter Property="Control.Background" Value="#CFDAE3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Control.BorderBrush" Value="#bfbfbf" />
                    <Setter Property="Control.Background" Value="#cccccc"/>
                    <Setter Property="Control.Foreground" Value="#A0A0A0"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <DockPanel Margin="5,5,5,0">
            <Grid DockPanel.Dock="Left" Width="260">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Margin="0,2,0,0">
                        <TextBlock>Fi<Underline>n</Underline>d what:</TextBlock>
                    </Label>

                    <TextBox Grid.Row="0" Grid.Column="1" Height="23" Padding="2" Margin="5,5,0,0" Width="175" HorizontalAlignment="Left"
                             Text="{Binding FindWhat, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Style="{DynamicResource ToolTipErrorMessageStyle}">
                    </TextBox>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Margin="0,2,0,0">
                        <TextBlock>Re<Underline>p</Underline>lace with:</TextBlock>
                    </Label>

                    <TextBox Grid.Row="0" Grid.Column="1" Height="23" Padding="2" Margin="5,5,0,0" Width="175" HorizontalAlignment="Left"
                             Text="{Binding ReplaceWith, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                             Style="{DynamicResource ToolTipErrorMessageStyle}">
                    </TextBox>
                </Grid>

                <Grid Grid.Row="2" Margin="5,10,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <CheckBox Grid.Row="0" Grid.Column="0" VerticalAlignment="Bottom" Margin="0,0,0,10" IsChecked="{Binding IsMatchCase}">
                        <TextBlock Margin="-3,0,0,0">Match <Underline>c</Underline>ase</TextBlock>
                    </CheckBox>
                </Grid>
            </Grid>

            <StackPanel DockPanel.Dock="Right" Orientation="Vertical" HorizontalAlignment="Right" Width="80">
                <Button Width="70" Height="23" Margin="5,5,5,5" Command="{Binding FindNextCommand}">
                    <Button.Content>
                        <TextBlock HorizontalAlignment="Center"><Underline>F</Underline>ind next</TextBlock>
                    </Button.Content>
                </Button>
                <Button Width="70" Height="23" Margin="5,5,5,5" Command="{Binding ReplaceCommand}">
                    <Button.Content>
                        <TextBlock HorizontalAlignment="Center"><Underline>R</Underline>eplace</TextBlock>
                    </Button.Content>
                </Button>
                <Button Width="70" Height="23" Margin="5,5,5,5" Command="{Binding ReplaceAllCommand}">
                    <Button.Content>
                        <TextBlock HorizontalAlignment="Center">Replace <Underline>A</Underline>ll</TextBlock>
                    </Button.Content>
                </Button>
                <Button Content="Cancel" Width="70" Height="23" Margin="5,5,5,5" Command="{Binding CancelCommand}" 
                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="Click">
                            <behaviors:InvokeCommandAction Command="{Binding UpdateDialogSettingsInCache}"/>
                        </behaviors:EventTrigger>
                    </behaviors:Interaction.Triggers>
                </Button>
            </StackPanel>
        </DockPanel>
    </Grid>
</Window>
